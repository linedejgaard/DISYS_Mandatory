// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.0
// source: GRPC_Protocol/Course.proto

package GRPC_Protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StudentRating float32 `protobuf:"fixed32,2,opt,name=StudentRating,proto3" json:"StudentRating,omitempty"`
	Name          string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Teacher       string  `protobuf:"bytes,4,opt,name=Teacher,proto3" json:"Teacher,omitempty"`
	ECTS          float32 `protobuf:"fixed32,5,opt,name=ECTS,proto3" json:"ECTS,omitempty"`
}

func (x *Course) Reset() {
	*x = Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{0}
}

func (x *Course) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Course) GetStudentRating() float32 {
	if x != nil {
		return x.StudentRating
	}
	return 0
}

func (x *Course) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Course) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *Course) GetECTS() float32 {
	if x != nil {
		return x.ECTS
	}
	return 0
}

type PostCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StudentRating float32 `protobuf:"fixed32,2,opt,name=StudentRating,proto3" json:"StudentRating,omitempty"`
	Name          string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Teacher       string  `protobuf:"bytes,4,opt,name=Teacher,proto3" json:"Teacher,omitempty"`
	ECTS          float32 `protobuf:"fixed32,5,opt,name=ECTS,proto3" json:"ECTS,omitempty"`
}

func (x *PostCourseRequest) Reset() {
	*x = PostCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCourseRequest) ProtoMessage() {}

func (x *PostCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCourseRequest.ProtoReflect.Descriptor instead.
func (*PostCourseRequest) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{1}
}

func (x *PostCourseRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *PostCourseRequest) GetStudentRating() float32 {
	if x != nil {
		return x.StudentRating
	}
	return 0
}

func (x *PostCourseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostCourseRequest) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *PostCourseRequest) GetECTS() float32 {
	if x != nil {
		return x.ECTS
	}
	return 0
}

type PostCourseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PostCourseReply) Reset() {
	*x = PostCourseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCourseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCourseReply) ProtoMessage() {}

func (x *PostCourseReply) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCourseReply.ProtoReflect.Descriptor instead.
func (*PostCourseReply) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{2}
}

func (x *PostCourseReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCourseByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetCourseByIDRequest) Reset() {
	*x = GetCourseByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseByIDRequest) ProtoMessage() {}

func (x *GetCourseByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCourseByIDRequest) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{3}
}

func (x *GetCourseByIDRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetCourseByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StudentRating float32 `protobuf:"fixed32,2,opt,name=StudentRating,proto3" json:"StudentRating,omitempty"`
	Name          string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Teacher       string  `protobuf:"bytes,4,opt,name=Teacher,proto3" json:"Teacher,omitempty"`
	ECTS          float32 `protobuf:"fixed32,5,opt,name=ECTS,proto3" json:"ECTS,omitempty"`
}

func (x *GetCourseByIDReply) Reset() {
	*x = GetCourseByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseByIDReply) ProtoMessage() {}

func (x *GetCourseByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseByIDReply.ProtoReflect.Descriptor instead.
func (*GetCourseByIDReply) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{4}
}

func (x *GetCourseByIDReply) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *GetCourseByIDReply) GetStudentRating() float32 {
	if x != nil {
		return x.StudentRating
	}
	return 0
}

func (x *GetCourseByIDReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetCourseByIDReply) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *GetCourseByIDReply) GetECTS() float32 {
	if x != nil {
		return x.ECTS
	}
	return 0
}

type GetCourseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetCourseListRequest) Reset() {
	*x = GetCourseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseListRequest) ProtoMessage() {}

func (x *GetCourseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseListRequest.ProtoReflect.Descriptor instead.
func (*GetCourseListRequest) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{5}
}

func (x *GetCourseListRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCourseListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course []*Course `protobuf:"bytes,1,rep,name=course,proto3" json:"course,omitempty"`
}

func (x *GetCourseListReply) Reset() {
	*x = GetCourseListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourseListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseListReply) ProtoMessage() {}

func (x *GetCourseListReply) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseListReply.ProtoReflect.Descriptor instead.
func (*GetCourseListReply) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{6}
}

func (x *GetCourseListReply) GetCourse() []*Course {
	if x != nil {
		return x.Course
	}
	return nil
}

type DeleteCourseByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteCourseByIDRequest) Reset() {
	*x = DeleteCourseByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCourseByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCourseByIDRequest) ProtoMessage() {}

func (x *DeleteCourseByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCourseByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteCourseByIDRequest) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCourseByIDRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteCourseByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteCourseByIDReply) Reset() {
	*x = DeleteCourseByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GRPC_Protocol_Course_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCourseByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCourseByIDReply) ProtoMessage() {}

func (x *DeleteCourseByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_GRPC_Protocol_Course_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCourseByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteCourseByIDReply) Descriptor() ([]byte, []int) {
	return file_GRPC_Protocol_Course_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCourseByIDReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_GRPC_Protocol_Course_proto protoreflect.FileDescriptor

var file_GRPC_Protocol_Course_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61,
	0x69, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x24, 0x0a,
	0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x43, 0x54, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x45, 0x43, 0x54, 0x53, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x45, 0x43, 0x54, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x45,
	0x43, 0x54, 0x53, 0x22, 0x2b, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x43, 0x54, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x45, 0x43, 0x54, 0x53, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x24, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x06, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x31, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0xb0, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44,
	0x0a, 0x0a, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GRPC_Protocol_Course_proto_rawDescOnce sync.Once
	file_GRPC_Protocol_Course_proto_rawDescData = file_GRPC_Protocol_Course_proto_rawDesc
)

func file_GRPC_Protocol_Course_proto_rawDescGZIP() []byte {
	file_GRPC_Protocol_Course_proto_rawDescOnce.Do(func() {
		file_GRPC_Protocol_Course_proto_rawDescData = protoimpl.X.CompressGZIP(file_GRPC_Protocol_Course_proto_rawDescData)
	})
	return file_GRPC_Protocol_Course_proto_rawDescData
}

var file_GRPC_Protocol_Course_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_GRPC_Protocol_Course_proto_goTypes = []interface{}{
	(*Course)(nil),                  // 0: main.Course
	(*PostCourseRequest)(nil),       // 1: main.PostCourseRequest
	(*PostCourseReply)(nil),         // 2: main.PostCourseReply
	(*GetCourseByIDRequest)(nil),    // 3: main.GetCourseByIDRequest
	(*GetCourseByIDReply)(nil),      // 4: main.GetCourseByIDReply
	(*GetCourseListRequest)(nil),    // 5: main.GetCourseListRequest
	(*GetCourseListReply)(nil),      // 6: main.GetCourseListReply
	(*DeleteCourseByIDRequest)(nil), // 7: main.DeleteCourseByIDRequest
	(*DeleteCourseByIDReply)(nil),   // 8: main.DeleteCourseByIDReply
}
var file_GRPC_Protocol_Course_proto_depIdxs = []int32{
	0, // 0: main.GetCourseListReply.course:type_name -> main.Course
	1, // 1: main.CourseMethods.postCourse:input_type -> main.PostCourseRequest
	3, // 2: main.CourseMethods.getCourseByID:input_type -> main.GetCourseByIDRequest
	5, // 3: main.CourseMethods.getCourses:input_type -> main.GetCourseListRequest
	7, // 4: main.CourseMethods.deleteCourseByID:input_type -> main.DeleteCourseByIDRequest
	2, // 5: main.CourseMethods.postCourse:output_type -> main.PostCourseReply
	4, // 6: main.CourseMethods.getCourseByID:output_type -> main.GetCourseByIDReply
	6, // 7: main.CourseMethods.getCourses:output_type -> main.GetCourseListReply
	8, // 8: main.CourseMethods.deleteCourseByID:output_type -> main.DeleteCourseByIDReply
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_GRPC_Protocol_Course_proto_init() }
func file_GRPC_Protocol_Course_proto_init() {
	if File_GRPC_Protocol_Course_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GRPC_Protocol_Course_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCourseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourseListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCourseByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GRPC_Protocol_Course_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCourseByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GRPC_Protocol_Course_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_GRPC_Protocol_Course_proto_goTypes,
		DependencyIndexes: file_GRPC_Protocol_Course_proto_depIdxs,
		MessageInfos:      file_GRPC_Protocol_Course_proto_msgTypes,
	}.Build()
	File_GRPC_Protocol_Course_proto = out.File
	file_GRPC_Protocol_Course_proto_rawDesc = nil
	file_GRPC_Protocol_Course_proto_goTypes = nil
	file_GRPC_Protocol_Course_proto_depIdxs = nil
}
